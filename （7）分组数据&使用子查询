（1）数据分组
select COUNT(*) as num_prods from products where vend_id=1003;所有的计算都是在表的所有数据或匹配特定的where子句的数据上进行的
（2）创建分组——分组是在Group by 子句中建立的
select vend_id,COUND(*) as num_prods from products group by vend_id;
vend_id包含产品供应商的ID；num_prods为计算字段；group by 子句指示mysql按num_prods排序并分组数据
group by 子句可以包含任意数目的列
group by 子句嵌套了分组，数据将在最后规定的分组上进行汇总
group by 子句中列出的每个列都必须检索列或有效的表达式
group by 子句必须出现在where子句之后，order by子句之前
（3）过滤分组
select cust_id,COUNT(*) as orders from orders group by cust_id having COUNT(*) >=2;
一般来说，where子句都可以用having来替代，唯一的差别是where过滤行，而having过滤分组；where在数据分组前进行过滤，having在数据分组后进行过滤

select vend_id,COUND(*) as num_prods from products where prod_price>=10 group by vend_id having COUNT(*)>=2;
where子句过滤所有prod_price至少为10的行；然后按Vend_id分组数据，having子句过滤计数为2或2以上的分组
select vend_id,COUND(*) as num_prods from products group by vend_id having COUNT(*)>=2;
(4)分组和排序
一般在使用order by 子句时，应该也给出group by 子句；这是保证数据正确排序的唯一方法；不要仅使用group by子句
select order_num,SUM(quantity*item_price) as ordertotal from orderitems group by order_num having SUM(quantity*item_price)>=50;
select order_num,SUM(quantity*item_price) as ordertotal from orderitems 
              group by order_num having SUM(quantity*item_price)>=50 order by ordertotal;
group by子句用来按订单号order_num分组数据；以便SUM(*)函数能够返回总计的订单价格；having子句过滤数据，使得只返回总计订单数大于等于50的订单；
最后用order by 子句排序输出
（5）select子句顺序
Group by 分组说明 
Having 组级过滤
order by 输出排序顺序
limit 要检索的行数




